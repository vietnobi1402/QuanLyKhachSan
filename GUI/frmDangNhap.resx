<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImageStore" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SpVIiTvqVKlQI//Z
</value>
  </data>
</root>